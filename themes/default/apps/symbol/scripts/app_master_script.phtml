<script>
	"use strict";

	$(document).ready(function($) {

		SMColibri.PS = Object({
			app: $('[data-app="symbol"]'),
			page_tab: "<?php echo($cl['page_tab']); ?>",
			prof_user: "<?php echo($cl['prof_user']['id']); ?>"
		});

		<?php if (empty($cl['prof_user']['is_blocked']) && not_empty($cl["can_view"])): ?>
			SMColibri.PS.timeline = Object({
				loading: false,
				loadmore: true,
				load: function() {
					var post_ls = SMColibri.PS.app.find('[data-an="entry-list"]');
		            var offset  = 0;
		            var _self_  = this;
		 
		            if (post_ls.find('div[data-post-offset]').length) {
		            	offset = post_ls.find('div[data-post-offset]').last().data('post-offset');
		            }

		            if ($.isNumeric(offset) && offset) {
						$.ajax({
							url: '<?php echo cl_link("native_api/symbol/load_more"); ?>',
							type: 'GET',
							dataType: 'json',
							data: {
								offset: offset, 
								type: SMColibri.PS.page_tab,
								prof_id: SMColibri.PS.prof_user
							},
							beforeSend: function() {
								_self_.loading = true;
							}
						}).done(function(data) {
							if (data.status == 200) {
								post_ls.append($(data.html));
							}
							else{
								_self_.loadmore = false;
							}
						}).always(function() {
							_self_.loading = false;

							delay(function() {
								SMColibri.fix_sidebars();
							}, 50);
						});
					}
				}
			});

			$(window).on('scroll', function() {
				if (SMColibri.curr_pn == "symbol") {
					if(($(window).scrollTop() + $(window).height()) > ($(document).height() - 100)) {
				    	if (cl_empty(SMColibri.PS.timeline.loading) && SMColibri.PS.timeline.loadmore) {
			                SMColibri.PS.timeline.load();
			       		}
				    }
				}
			});
		<?php endif; ?>
		
		<?php if (not_empty($cl['prof_user']['owner'])): ?>
			SMColibri.PS.profile_report = new Vue({
				el: "#cl-report-symbol-vue-app",
				data: {
					profile_id: <?php echo ($cl['prof_user']['id']); ?>,
					fe_state: {
						submitting: false,
						done: false,
						fail: false
					},
					reason: 0,
					comment: ""
				},
				computed: {
					is_invalid_form: function() {
						if (this.reason == 0) {
							return true;
						}

						else if(this.comment.length > 2900) {
							return true;
						}

						else {
							return false;
						}
					}
				},
				methods: {
					open: function(id = 0) {
						if (SMColibri.is_logged()) {
							$('div[data-app="report-symbol-app"]').modal('show');
						}
						else {
							SMColibri.req_auth();
						}
					},
					close: function() {
						let _app_      = this;
						_app_.reason   = 0;
						_app_.comment  = "";

						$('div[data-app="report-symbol-app"]').modal('hide');
					},
					send_report: function(id = false) {
						let _app_ = this;
						let data  = Object({
							reason: _app_.reason,
							profile_id: _app_.profile_id,
							comment: _app_.comment
						});

						if (_app_.fe_state.submitting != true) {
							$.ajax({
								url: '<?php echo cl_link("native_api/main/report_profile"); ?>',
								type: 'POST',
								dataType: 'json',
								data: data,
								beforeSend: function() {
									_app_.fe_state.submitting = true;
								}
							}).done(function(data) {
								if (data.status == 200) {
									cl_bs_notify("<?php echo cl_translate('Thank you for letting us know! Your feedback is greatly appreciated.'); ?>", 3000);
								}
								else {
									SMColibri.errorMSG();
								}
							}).always(function() {
								_app_.close();
								_app_.fe_state.submitting = false;
							});
						} 
					}
				}
			});
		<?php endif ?>
	});
</script>